<?php/** * 供应商帐号 * User: yagas * Date: 2016/5/24 * Time: 10:08 * * @property integer uid        账号ID * @property string  supplierId 供应商编号 * @property integer disable    禁止登陆 * @property string  account    供应商登陆帐号 * @property string  password   供应商登陆密码 */class tbSupplierAccount extends CActiveRecord {    protected $oldPassword;    public static function model($className = __CLASS__) {        return parent::model($className);    }    public function tableName() {        return '{{supplier_account}}';    }    public function primaryKey() {        return 'uid';    }    public function attributeLabels() {        return [            'uid'        => '账号ID',            'supplierId' => '供应商编号',            'account'    => '供应商登陆账号',            'password'   => '供应商登陆密码'        ];    }    /**     * 数据添加校验     * 供应商编号，账号，密码不能为空     * 供应商账号不能重复     * @return array     */    public function rules() {        return [            ['supplierId,account,password', 'required', 'message'=>'{attribate} need be required', 'on'=>['insert']],            ['account', 'numerical', 'integerOnly'=>true, 'message'=>'account need numeric'],            ['account', 'unique', 'message'=>'account has exists', 'on'=>['insert']],            ['uid,supplierId,account,password', 'safe', 'on'=>['update']]        ];    }    /**     * 创建加盐加加密密码     * @param $string    密码明文     * @param null $satl 盐值     * @return string     */    public function passwd($string, $satl=null) {        if(is_null($satl)) {            $satl = '';            $satllen = mt_rand(3, 8);            while(strlen($satl) < $satllen) {                $satl .= mt_rand(97, 122);            }        }        $newPassword = md5(hash('sha512', $string.$satl));        return $newPassword.$satl;    }    /**     * @param $password1 密码     * @param $password2 明文密码     * @return bool     */    public function checkPassword($password1, $password2) {        $satl = substr($password1, 32);        $password2 = $this->passwd($password2, $satl);        return strcmp($password1, $password2)===0;    }    /**     * 新建账号，更新账号密码，这两种情况需要对密码进行加密     * @return bool     */    protected function beforeSave() {        if($this->isNewRecord || $this->oldPassword !== $this->password) {            $this->password = $this->passwd($this->password);        }        return parent::beforeSave();    }    /**     * 设置原登陆密码，以备判断是否进行密码更新     */    protected function afterFind() {        $this->oldPassword = $this->password;        parent::afterFind();    }    /**     * 通过手机号码获取会员信息     * @param $phone     * @return static     */    public function findByPhone($phone) {        return $this->find("account=:phone", [':phone'=>$phone]);    }}